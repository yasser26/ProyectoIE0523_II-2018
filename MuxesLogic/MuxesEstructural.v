/* Generated by Yosys 0.7+574 (git sha1 0fad1570, gcc 6.3.0-18+deb9u1 -fPIC -Os) */

module phy_tx(clk_f, clk_2f, clk_4f, reset, data0, data1, data2, data3, outEtapaL2);
  wire [8:0] _000_;
  wire [8:0] _001_;
  wire [8:0] _002_;
  wire [8:0] _003_;
  wire [8:0] _004_;
  wire [8:0] _005_;
  wire _006_;
  wire _007_;
  wire [8:0] _008_;
  wire [8:0] _009_;
  wire [8:0] _010_;
  wire _011_;
  wire _012_;
  wire [8:0] _013_;
  wire [8:0] _014_;
  wire [8:0] _015_;
  wire [8:0] _016_;
  wire [8:0] _017_;
  wire [8:0] _018_;
  wire [8:0] _019_;
  wire [8:0] _020_;
  wire [8:0] _021_;
  wire [8:0] _022_;
  wire [8:0] _023_;
  wire [8:0] _024_;
  wire [8:0] _025_;
  wire [8:0] _026_;
  input clk_2f;
  input clk_4f;
  input clk_f;
  input [8:0] data0;
  input [8:0] data1;
  input [8:0] data2;
  input [8:0] data3;
  reg [8:0] etapa1_preData0;
  reg [8:0] etapa1_preData1;
  reg [8:0] etapa1_preData2;
  reg [8:0] etapa1_preData3;
  wire [8:0] etapa2_preData0;
  wire [8:0] etapa2_preData1;
  wire [8:0] outEtapaL1L2_0;
  wire [8:0] outEtapaL1L2_1;
  output [8:0] outEtapaL2;
  input reset;
  reg selectorL1;
  reg selectorL2;
  assign _015_[0] = data0[8] ? data0[0] : etapa1_preData0[0];
  assign _015_[1] = data0[8] ? data0[1] : etapa1_preData0[1];
  assign _015_[2] = data0[8] ? data0[2] : etapa1_preData0[2];
  assign _015_[3] = data0[8] ? data0[3] : etapa1_preData0[3];
  assign _015_[4] = data0[8] ? data0[4] : etapa1_preData0[4];
  assign _015_[5] = data0[8] ? data0[5] : etapa1_preData0[5];
  assign _015_[6] = data0[8] ? data0[6] : etapa1_preData0[6];
  assign _015_[7] = data0[8] ? data0[7] : etapa1_preData0[7];
  assign _016_[0] = data1[8] ? data1[0] : etapa1_preData1[0];
  assign _016_[1] = data1[8] ? data1[1] : etapa1_preData1[1];
  assign _016_[2] = data1[8] ? data1[2] : etapa1_preData1[2];
  assign _016_[3] = data1[8] ? data1[3] : etapa1_preData1[3];
  assign _016_[4] = data1[8] ? data1[4] : etapa1_preData1[4];
  assign _016_[5] = data1[8] ? data1[5] : etapa1_preData1[5];
  assign _016_[6] = data1[8] ? data1[6] : etapa1_preData1[6];
  assign _016_[7] = data1[8] ? data1[7] : etapa1_preData1[7];
  assign _017_[0] = data2[8] ? data2[0] : etapa1_preData2[0];
  assign _017_[1] = data2[8] ? data2[1] : etapa1_preData2[1];
  assign _017_[2] = data2[8] ? data2[2] : etapa1_preData2[2];
  assign _017_[3] = data2[8] ? data2[3] : etapa1_preData2[3];
  assign _017_[4] = data2[8] ? data2[4] : etapa1_preData2[4];
  assign _017_[5] = data2[8] ? data2[5] : etapa1_preData2[5];
  assign _017_[6] = data2[8] ? data2[6] : etapa1_preData2[6];
  assign _017_[7] = data2[8] ? data2[7] : etapa1_preData2[7];
  assign _018_[0] = data3[8] ? data3[0] : etapa1_preData3[0];
  assign _018_[1] = data3[8] ? data3[1] : etapa1_preData3[1];
  assign _018_[2] = data3[8] ? data3[2] : etapa1_preData3[2];
  assign _018_[3] = data3[8] ? data3[3] : etapa1_preData3[3];
  assign _018_[4] = data3[8] ? data3[4] : etapa1_preData3[4];
  assign _018_[5] = data3[8] ? data3[5] : etapa1_preData3[5];
  assign _018_[6] = data3[8] ? data3[6] : etapa1_preData3[6];
  assign _018_[7] = data3[8] ? data3[7] : etapa1_preData3[7];
  assign _019_[0] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[0] : etapa2_preData0[0];
  assign _019_[1] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[1] : etapa2_preData0[1];
  assign _019_[2] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[2] : etapa2_preData0[2];
  assign _019_[3] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[3] : etapa2_preData0[3];
  assign _019_[4] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[4] : etapa2_preData0[4];
  assign _019_[5] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[5] : etapa2_preData0[5];
  assign _019_[6] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[6] : etapa2_preData0[6];
  assign _019_[7] = outEtapaL1L2_0[8] ? outEtapaL1L2_0[7] : etapa2_preData0[7];
  assign _020_[0] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[0] : etapa2_preData1[0];
  assign _020_[1] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[1] : etapa2_preData1[1];
  assign _020_[2] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[2] : etapa2_preData1[2];
  assign _020_[3] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[3] : etapa2_preData1[3];
  assign _020_[4] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[4] : etapa2_preData1[4];
  assign _020_[5] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[5] : etapa2_preData1[5];
  assign _020_[6] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[6] : etapa2_preData1[6];
  assign _020_[7] = outEtapaL1L2_1[8] ? outEtapaL1L2_1[7] : etapa2_preData1[7];
  assign _021_[0] = data1[1] ? data1[0] : etapa1_preData1[0];
  assign _021_[1] = data1[1] ? 1'h1 : etapa1_preData1[1];
  assign _021_[2] = data1[1] ? data1[2] : etapa1_preData1[2];
  assign _021_[3] = data1[1] ? data1[3] : etapa1_preData1[3];
  assign _021_[4] = data1[1] ? data1[4] : etapa1_preData1[4];
  assign _021_[5] = data1[1] ? data1[5] : etapa1_preData1[5];
  assign _021_[6] = data1[1] ? data1[6] : etapa1_preData1[6];
  assign _021_[7] = data1[1] ? data1[7] : etapa1_preData1[7];
  assign _021_[8] = data1[1] ? data1[8] : etapa1_preData1[8];
  assign _022_[0] = data3[1] ? data3[0] : etapa1_preData3[0];
  assign _022_[1] = data3[1] ? 1'h1 : etapa1_preData3[1];
  assign _022_[2] = data3[1] ? data3[2] : etapa1_preData3[2];
  assign _022_[3] = data3[1] ? data3[3] : etapa1_preData3[3];
  assign _022_[4] = data3[1] ? data3[4] : etapa1_preData3[4];
  assign _022_[5] = data3[1] ? data3[5] : etapa1_preData3[5];
  assign _022_[6] = data3[1] ? data3[6] : etapa1_preData3[6];
  assign _022_[7] = data3[1] ? data3[7] : etapa1_preData3[7];
  assign _022_[8] = data3[1] ? data3[8] : etapa1_preData3[8];
  assign _023_[0] = data0[1] ? data0[0] : etapa1_preData0[0];
  assign _023_[1] = data0[1] ? 1'h1 : etapa1_preData0[1];
  assign _023_[2] = data0[1] ? data0[2] : etapa1_preData0[2];
  assign _023_[3] = data0[1] ? data0[3] : etapa1_preData0[3];
  assign _023_[4] = data0[1] ? data0[4] : etapa1_preData0[4];
  assign _023_[5] = data0[1] ? data0[5] : etapa1_preData0[5];
  assign _023_[6] = data0[1] ? data0[6] : etapa1_preData0[6];
  assign _023_[7] = data0[1] ? data0[7] : etapa1_preData0[7];
  assign _023_[8] = data0[1] ? data0[8] : etapa1_preData0[8];
  assign _024_[0] = data2[1] ? data2[0] : etapa1_preData2[0];
  assign _024_[1] = data2[1] ? 1'h1 : etapa1_preData2[1];
  assign _024_[2] = data2[1] ? data2[2] : etapa1_preData2[2];
  assign _024_[3] = data2[1] ? data2[3] : etapa1_preData2[3];
  assign _024_[4] = data2[1] ? data2[4] : etapa1_preData2[4];
  assign _024_[5] = data2[1] ? data2[5] : etapa1_preData2[5];
  assign _024_[6] = data2[1] ? data2[6] : etapa1_preData2[6];
  assign _024_[7] = data2[1] ? data2[7] : etapa1_preData2[7];
  assign _024_[8] = data2[1] ? data2[8] : etapa1_preData2[8];
  assign _025_[0] = _009_[8] ? _009_[0] : etapa2_preData1[0];
  assign _025_[1] = _009_[8] ? _009_[1] : etapa2_preData1[1];
  assign _025_[2] = _009_[8] ? _009_[2] : etapa2_preData1[2];
  assign _025_[3] = _009_[8] ? _009_[3] : etapa2_preData1[3];
  assign _025_[4] = _009_[8] ? _009_[4] : etapa2_preData1[4];
  assign _025_[5] = _009_[8] ? _009_[5] : etapa2_preData1[5];
  assign _025_[6] = _009_[8] ? _009_[6] : etapa2_preData1[6];
  assign _025_[7] = _009_[8] ? _009_[7] : etapa2_preData1[7];
  assign _026_[0] = _008_[8] ? _008_[0] : etapa2_preData0[0];
  assign _026_[1] = _008_[8] ? _008_[1] : etapa2_preData0[1];
  assign _026_[2] = _008_[8] ? _008_[2] : etapa2_preData0[2];
  assign _026_[3] = _008_[8] ? _008_[3] : etapa2_preData0[3];
  assign _026_[4] = _008_[8] ? _008_[4] : etapa2_preData0[4];
  assign _026_[5] = _008_[8] ? _008_[5] : etapa2_preData0[5];
  assign _026_[6] = _008_[8] ? _008_[6] : etapa2_preData0[6];
  assign _026_[7] = _008_[8] ? _008_[7] : etapa2_preData0[7];
  assign _010_[0] = selectorL2 ? _025_[0] : _026_[0];
  assign _010_[1] = selectorL2 ? _025_[1] : _026_[1];
  assign _010_[2] = selectorL2 ? _025_[2] : _026_[2];
  assign _010_[3] = selectorL2 ? _025_[3] : _026_[3];
  assign _010_[4] = selectorL2 ? _025_[4] : _026_[4];
  assign _010_[5] = selectorL2 ? _025_[5] : _026_[5];
  assign _010_[6] = selectorL2 ? _025_[6] : _026_[6];
  assign _010_[7] = selectorL2 ? _025_[7] : _026_[7];
  assign _010_[8] = selectorL2 ? _009_[8] : _008_[8];
  assign _013_[0] = selectorL1 ? _022_[0] : _024_[0];
  assign _013_[1] = selectorL1 ? _022_[1] : _024_[1];
  assign _013_[2] = selectorL1 ? _022_[2] : _024_[2];
  assign _013_[3] = selectorL1 ? _022_[3] : _024_[3];
  assign _013_[4] = selectorL1 ? _022_[4] : _024_[4];
  assign _013_[5] = selectorL1 ? _022_[5] : _024_[5];
  assign _013_[6] = selectorL1 ? _022_[6] : _024_[6];
  assign _013_[7] = selectorL1 ? _022_[7] : _024_[7];
  assign _013_[8] = selectorL1 ? _022_[8] : _024_[8];
  assign _009_[0] = reset ? _013_[0] : 1'hx;
  assign _009_[1] = reset ? _013_[1] : 1'hx;
  assign _009_[2] = reset ? _013_[2] : 1'hx;
  assign _009_[3] = reset ? _013_[3] : 1'hx;
  assign _009_[4] = reset ? _013_[4] : 1'hx;
  assign _009_[5] = reset ? _013_[5] : 1'hx;
  assign _009_[6] = reset ? _013_[6] : 1'hx;
  assign _009_[7] = reset ? _013_[7] : 1'hx;
  assign _009_[8] = reset ? _013_[8] : 1'hx;
  assign _014_[0] = selectorL1 ? _021_[0] : _023_[0];
  assign _014_[1] = selectorL1 ? _021_[1] : _023_[1];
  assign _014_[2] = selectorL1 ? _021_[2] : _023_[2];
  assign _014_[3] = selectorL1 ? _021_[3] : _023_[3];
  assign _014_[4] = selectorL1 ? _021_[4] : _023_[4];
  assign _014_[5] = selectorL1 ? _021_[5] : _023_[5];
  assign _014_[6] = selectorL1 ? _021_[6] : _023_[6];
  assign _014_[7] = selectorL1 ? _021_[7] : _023_[7];
  assign _014_[8] = selectorL1 ? _021_[8] : _023_[8];
  assign _008_[0] = reset ? _014_[0] : 1'hx;
  assign _008_[1] = reset ? _014_[1] : 1'hx;
  assign _008_[2] = reset ? _014_[2] : 1'hx;
  assign _008_[3] = reset ? _014_[3] : 1'hx;
  assign _008_[4] = reset ? _014_[4] : 1'hx;
  assign _008_[5] = reset ? _014_[5] : 1'hx;
  assign _008_[6] = reset ? _014_[6] : 1'hx;
  assign _008_[7] = reset ? _014_[7] : 1'hx;
  assign _008_[8] = reset ? _014_[8] : 1'hx;
  assign outEtapaL2[0] = reset ? _010_[0] : 1'h0;
  assign outEtapaL2[1] = reset ? _010_[1] : 1'h0;
  assign outEtapaL2[2] = reset ? _010_[2] : 1'h0;
  assign outEtapaL2[3] = reset ? _010_[3] : 1'h0;
  assign outEtapaL2[4] = reset ? _010_[4] : 1'h0;
  assign outEtapaL2[5] = reset ? _010_[5] : 1'h0;
  assign outEtapaL2[6] = reset ? _010_[6] : 1'h0;
  assign outEtapaL2[7] = reset ? _010_[7] : 1'h0;
  assign outEtapaL2[8] = reset ? _010_[8] : 1'h0;
  assign outEtapaL1L2_1[0] = reset ? _009_[0] : 1'h0;
  assign outEtapaL1L2_1[1] = reset ? _009_[1] : 1'h0;
  assign outEtapaL1L2_1[2] = reset ? _009_[2] : 1'h0;
  assign outEtapaL1L2_1[3] = reset ? _009_[3] : 1'h0;
  assign outEtapaL1L2_1[4] = reset ? _009_[4] : 1'h0;
  assign outEtapaL1L2_1[5] = reset ? _009_[5] : 1'h0;
  assign outEtapaL1L2_1[6] = reset ? _009_[6] : 1'h0;
  assign outEtapaL1L2_1[7] = reset ? _009_[7] : 1'h0;
  assign outEtapaL1L2_1[8] = reset ? _009_[8] : 1'h0;
  assign outEtapaL1L2_0[0] = reset ? _008_[0] : 1'h0;
  assign outEtapaL1L2_0[1] = reset ? _008_[1] : 1'h0;
  assign outEtapaL1L2_0[2] = reset ? _008_[2] : 1'h0;
  assign outEtapaL1L2_0[3] = reset ? _008_[3] : 1'h0;
  assign outEtapaL1L2_0[4] = reset ? _008_[4] : 1'h0;
  assign outEtapaL1L2_0[5] = reset ? _008_[5] : 1'h0;
  assign outEtapaL1L2_0[6] = reset ? _008_[6] : 1'h0;
  assign outEtapaL1L2_0[7] = reset ? _008_[7] : 1'h0;
  assign outEtapaL1L2_0[8] = reset ? _008_[8] : 1'h0;
  assign _005_[0] = reset ? _020_[0] : 1'h0;
  assign _005_[1] = reset ? _020_[1] : 1'h0;
  assign _005_[2] = reset ? _020_[2] : 1'h0;
  assign _005_[3] = reset ? _020_[3] : 1'h0;
  assign _005_[4] = reset ? _020_[4] : 1'h0;
  assign _005_[5] = reset ? _020_[5] : 1'h0;
  assign _005_[6] = reset ? _020_[6] : 1'h0;
  assign _005_[7] = reset ? _020_[7] : 1'h0;
  assign _004_[0] = reset ? _019_[0] : 1'h0;
  assign _004_[1] = reset ? _019_[1] : 1'h0;
  assign _004_[2] = reset ? _019_[2] : 1'h0;
  assign _004_[3] = reset ? _019_[3] : 1'h0;
  assign _004_[4] = reset ? _019_[4] : 1'h0;
  assign _004_[5] = reset ? _019_[5] : 1'h0;
  assign _004_[6] = reset ? _019_[6] : 1'h0;
  assign _004_[7] = reset ? _019_[7] : 1'h0;
  assign _007_ = reset ? _012_ : 1'h0;
  assign _003_[0] = reset ? _018_[0] : 1'h0;
  assign _003_[1] = reset ? _018_[1] : 1'h0;
  assign _003_[2] = reset ? _018_[2] : 1'h0;
  assign _003_[3] = reset ? _018_[3] : 1'h0;
  assign _003_[4] = reset ? _018_[4] : 1'h0;
  assign _003_[5] = reset ? _018_[5] : 1'h0;
  assign _003_[6] = reset ? _018_[6] : 1'h0;
  assign _003_[7] = reset ? _018_[7] : 1'h0;
  assign _003_[8] = reset ? data3[8] : 1'h0;
  assign _002_[0] = reset ? _017_[0] : 1'h0;
  assign _002_[1] = reset ? _017_[1] : 1'h0;
  assign _002_[2] = reset ? _017_[2] : 1'h0;
  assign _002_[3] = reset ? _017_[3] : 1'h0;
  assign _002_[4] = reset ? _017_[4] : 1'h0;
  assign _002_[5] = reset ? _017_[5] : 1'h0;
  assign _002_[6] = reset ? _017_[6] : 1'h0;
  assign _002_[7] = reset ? _017_[7] : 1'h0;
  assign _002_[8] = reset ? data2[8] : 1'h0;
  assign _001_[0] = reset ? _016_[0] : 1'h0;
  assign _001_[1] = reset ? _016_[1] : 1'h0;
  assign _001_[2] = reset ? _016_[2] : 1'h0;
  assign _001_[3] = reset ? _016_[3] : 1'h0;
  assign _001_[4] = reset ? _016_[4] : 1'h0;
  assign _001_[5] = reset ? _016_[5] : 1'h0;
  assign _001_[6] = reset ? _016_[6] : 1'h0;
  assign _001_[7] = reset ? _016_[7] : 1'h0;
  assign _001_[8] = reset ? data1[8] : 1'h0;
  assign _000_[0] = reset ? _015_[0] : 1'h0;
  assign _000_[1] = reset ? _015_[1] : 1'h0;
  assign _000_[2] = reset ? _015_[2] : 1'h0;
  assign _000_[3] = reset ? _015_[3] : 1'h0;
  assign _000_[4] = reset ? _015_[4] : 1'h0;
  assign _000_[5] = reset ? _015_[5] : 1'h0;
  assign _000_[6] = reset ? _015_[6] : 1'h0;
  assign _000_[7] = reset ? _015_[7] : 1'h0;
  assign _000_[8] = reset ? data0[8] : 1'h0;
  assign _006_ = reset ? _011_ : 1'h0;
  assign _011_ = ~selectorL1;
  assign _012_ = ~selectorL2;
  always @(posedge clk_2f)
      selectorL2 <= _007_;
  reg \etapa2_preData0_reg[0] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[0]  <= _004_[0];
  assign etapa2_preData0[0] = \etapa2_preData0_reg[0] ;
  reg \etapa2_preData0_reg[1] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[1]  <= _004_[1];
  assign etapa2_preData0[1] = \etapa2_preData0_reg[1] ;
  reg \etapa2_preData0_reg[2] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[2]  <= _004_[2];
  assign etapa2_preData0[2] = \etapa2_preData0_reg[2] ;
  reg \etapa2_preData0_reg[3] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[3]  <= _004_[3];
  assign etapa2_preData0[3] = \etapa2_preData0_reg[3] ;
  reg \etapa2_preData0_reg[4] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[4]  <= _004_[4];
  assign etapa2_preData0[4] = \etapa2_preData0_reg[4] ;
  reg \etapa2_preData0_reg[5] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[5]  <= _004_[5];
  assign etapa2_preData0[5] = \etapa2_preData0_reg[5] ;
  reg \etapa2_preData0_reg[6] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[6]  <= _004_[6];
  assign etapa2_preData0[6] = \etapa2_preData0_reg[6] ;
  reg \etapa2_preData0_reg[7] ;
  always @(posedge clk_2f)
      \etapa2_preData0_reg[7]  <= _004_[7];
  assign etapa2_preData0[7] = \etapa2_preData0_reg[7] ;
  reg \etapa2_preData1_reg[0] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[0]  <= _005_[0];
  assign etapa2_preData1[0] = \etapa2_preData1_reg[0] ;
  reg \etapa2_preData1_reg[1] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[1]  <= _005_[1];
  assign etapa2_preData1[1] = \etapa2_preData1_reg[1] ;
  reg \etapa2_preData1_reg[2] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[2]  <= _005_[2];
  assign etapa2_preData1[2] = \etapa2_preData1_reg[2] ;
  reg \etapa2_preData1_reg[3] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[3]  <= _005_[3];
  assign etapa2_preData1[3] = \etapa2_preData1_reg[3] ;
  reg \etapa2_preData1_reg[4] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[4]  <= _005_[4];
  assign etapa2_preData1[4] = \etapa2_preData1_reg[4] ;
  reg \etapa2_preData1_reg[5] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[5]  <= _005_[5];
  assign etapa2_preData1[5] = \etapa2_preData1_reg[5] ;
  reg \etapa2_preData1_reg[6] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[6]  <= _005_[6];
  assign etapa2_preData1[6] = \etapa2_preData1_reg[6] ;
  reg \etapa2_preData1_reg[7] ;
  always @(posedge clk_2f)
      \etapa2_preData1_reg[7]  <= _005_[7];
  assign etapa2_preData1[7] = \etapa2_preData1_reg[7] ;
  always @(posedge clk_f)
      selectorL1 <= _006_;
  always @(posedge clk_f)
      etapa1_preData0[0] <= _000_[0];
  always @(posedge clk_f)
      etapa1_preData0[1] <= _000_[1];
  always @(posedge clk_f)
      etapa1_preData0[2] <= _000_[2];
  always @(posedge clk_f)
      etapa1_preData0[3] <= _000_[3];
  always @(posedge clk_f)
      etapa1_preData0[4] <= _000_[4];
  always @(posedge clk_f)
      etapa1_preData0[5] <= _000_[5];
  always @(posedge clk_f)
      etapa1_preData0[6] <= _000_[6];
  always @(posedge clk_f)
      etapa1_preData0[7] <= _000_[7];
  always @(posedge clk_f)
      etapa1_preData0[8] <= _000_[8];
  always @(posedge clk_f)
      etapa1_preData1[0] <= _001_[0];
  always @(posedge clk_f)
      etapa1_preData1[1] <= _001_[1];
  always @(posedge clk_f)
      etapa1_preData1[2] <= _001_[2];
  always @(posedge clk_f)
      etapa1_preData1[3] <= _001_[3];
  always @(posedge clk_f)
      etapa1_preData1[4] <= _001_[4];
  always @(posedge clk_f)
      etapa1_preData1[5] <= _001_[5];
  always @(posedge clk_f)
      etapa1_preData1[6] <= _001_[6];
  always @(posedge clk_f)
      etapa1_preData1[7] <= _001_[7];
  always @(posedge clk_f)
      etapa1_preData1[8] <= _001_[8];
  always @(posedge clk_f)
      etapa1_preData2[0] <= _002_[0];
  always @(posedge clk_f)
      etapa1_preData2[1] <= _002_[1];
  always @(posedge clk_f)
      etapa1_preData2[2] <= _002_[2];
  always @(posedge clk_f)
      etapa1_preData2[3] <= _002_[3];
  always @(posedge clk_f)
      etapa1_preData2[4] <= _002_[4];
  always @(posedge clk_f)
      etapa1_preData2[5] <= _002_[5];
  always @(posedge clk_f)
      etapa1_preData2[6] <= _002_[6];
  always @(posedge clk_f)
      etapa1_preData2[7] <= _002_[7];
  always @(posedge clk_f)
      etapa1_preData2[8] <= _002_[8];
  always @(posedge clk_f)
      etapa1_preData3[0] <= _003_[0];
  always @(posedge clk_f)
      etapa1_preData3[1] <= _003_[1];
  always @(posedge clk_f)
      etapa1_preData3[2] <= _003_[2];
  always @(posedge clk_f)
      etapa1_preData3[3] <= _003_[3];
  always @(posedge clk_f)
      etapa1_preData3[4] <= _003_[4];
  always @(posedge clk_f)
      etapa1_preData3[5] <= _003_[5];
  always @(posedge clk_f)
      etapa1_preData3[6] <= _003_[6];
  always @(posedge clk_f)
      etapa1_preData3[7] <= _003_[7];
  always @(posedge clk_f)
      etapa1_preData3[8] <= _003_[8];
endmodule
